## 프로젝트 설명

- 페이지를 처음 열면 CALL 버튼만 보입니다. 
- 버튼을 누르면 1.5초 후에 포토 앨범이 등장합니다. 
- 포토 앨범은 서버로부터 받아 온 n개의 이미지 소스를 표시합니다. (Ajax 방식의 통신)
- 한 번에 하나의 이미지만 보여주며, 버튼을 눌러 좌우로 이동할 수 있습니다.
- DOG API는 데이터베이스에 워낙 많은 사진이 있어서, 이미지 로드 시간이 조금 걸릴 수 있습니다. 그래봐야 1초도 안 걸리지만..!


## index.html

- id가 "photo"인 div 영역에 사진이 표시됩니다.
- id가 "prev"인 버튼과 "next"인 버튼을 눌러 사진 이동이 가능합니다.
- id가 "beginning"인 영역은 서버로부터 사진을 불러오기 전 화면을 덮기 위해 존재하는 영역입니다.
- id가 "call-btn"인 버튼을 누르면 서버에게 사진 소스를 요청하고, 응답을 받으면서 포토 앨범이 나타납니다.


## script.js : 요소 선택

- getElementById를 사용해 기능을 추가할 모든 요소를 각각 선택하였습니다.


## script.js : 사용 데이터 선언

- photos는 이미지 소스들을 보관할 배열입니다.
- numOfPhoto는 불러올 이미지 소스의 개수인데, 새로 안내해드린 DOG API는 50이 최대치입니다.
- photoIndex는 포토 앨범에서 현재 몇번 인덱스의 이미지를 보여주고 있는지를 뜻하는 숫자 데이터입니다. 배열은 0부터 시작합니다.
- request는 서버와 통신하기 위해 사용할 객체를 생성한 것입니다. 
- api는 JSON 데이터를 응답으로 받을 수 있는 서버 주소입니다. 데이터에는 고양이 이미지 소스가 나열된 배열이 포함되어 있습니다(수업 영상에서 이 서버를 안내했습니다).
- isPushed는 초기에 CALL 버튼을 클릭하면 true가 되어 포토 앨범 노출 여부를 결정해주는 역할을 합니다.


## script.js : 응답이 로드되었을 때의 이벤트 핸들링

- 여기에서 사용하는 서버의 응답은 JSON 포맷 문자열이며, 그 안에는 두 개의 키가 있습니다. 
- message 키는 이미지 소스 배열이고, status 키는 성공 또는 실패를 표현하는 문자열입니다. 
- 데이터가 로드(load)되면, request 객체의 responseText 속성을 읽어들임과 동시에 JSON.parse 합니다. responseText는 응답으로 받은 문자열 데이터를 뜻합니다.
- 결과로 얻은 JSON 객체의 message 배열 안의 각 요소((forEach)들을 photos 배열에 하나씩 추가해 줍니다. push 메소드를 사용했습니다.
- 포토 앨범의 사진 부분인 photoDiv의 배경이미지로 배열의 첫번째 요소를 지정해주었습니다. 고양이 이미지 소스 중 첫 번째 것을 선택한 것입니다.


## script.js : callPhotos 함수 - 요청 초기화 

- callPhotos 함수가 호출되면 request 객체가 GET 방식으로 초기화됩니다. open 메소드는 초기화를 해줍니다.
- 초기화 직후 바로 send 메소드를 통해 요청을 보냅니다.
- 이 함수는 페이지 첫 화면에서 CALL 버튼을 누르면 호출됩니다.


## script.js : CALL 버튼 클릭 이벤트 핸들링

- CALL 버튼을 여러 번 누르면 요청이 여러 번 될 수 있기 때문에, 한 번만 눌러야 합니다. 
- 한 번 누르고 나면 isPushed가 true로 변경되고, true가 된 이후에는 아무리 눌러도 소용없도록 return 문으로 강제 종료합니다.
- callPhotos 를 호출하여 요청을 보냅니다. 
- 포토 앨범을 가리고 있는 초기 화면, beginning은 요청을 보내고 1.5초 후에 사라집니다.
- class "beginning"이 사라지면 초기 화면이 사라지도록 스타일시트를 작성해두었습니다.


## script.js : prev와 next 버튼 클릭 이벤트 핸들링 

- prev, next 버튼을 누르면 보여지는 사진이 변경되어야 합니다. 
- 이때 사진들은 모두 photos 배열에 보관되어 있으므로, 인덱스 번호를 더하거나 빼주는 식으로 보여지는 사진을 바꿀 수 있습니다.
- 배열 요소가 8개인 경우, 인덱스는 0부터 7까지가 한계입니다.
- 따라서 인덱스 번호(photoIndex)가 0일 때 뒤로 가면 7이 되어야 하고, 7일 때 앞으로 가면 0이 되어야 합니다.
